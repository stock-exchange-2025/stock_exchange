"""Initial migration

Revision ID: 1106c75134f1
Revises: 
Create Date: 2025-05-21 10:36:37.476603

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1106c75134f1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instruments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ticker', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker')
    )
    op.create_index('ix_instruments_ticker', 'instruments', ['ticker'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('user', 'admin', name='userrole'), nullable=False),
    sa.Column('api_key', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('api_key', name='uq_users_api_key'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('username', name='uq_users_username')
    )
    op.create_table('balances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('instrument_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('locked_amount', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'instrument_id', name='uq_user_instrument_balance')
    )
    op.create_index('ix_balances_user_id', 'balances', ['user_id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('instrument_id', sa.UUID(), nullable=False),
    sa.Column('order_type', sa.Enum('market', 'limit', name='ordertype'), nullable=False),
    sa.Column('direction', sa.Enum('buy', 'sell', name='direction'), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('quantity', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('filled_quantity', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('status', sa.Enum('new', 'executed', 'partially_filled', 'canceled', name='orderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_orders_user_id', 'orders', ['user_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=True),
    sa.Column('instrument_id', sa.UUID(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('quantity', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('executed_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_index('ix_orders_user_id', table_name='orders')
    op.drop_table('orders')
    op.drop_index('ix_balances_user_id', table_name='balances')
    op.drop_table('balances')
    op.drop_table('users')
    op.drop_index('ix_instruments_ticker', table_name='instruments')
    op.drop_table('instruments')
    # ### end Alembic commands ###
